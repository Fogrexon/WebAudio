{"version":3,"sources":["ts/instruments/Envelope.ts","ts/utils.ts","ts/instruments/LFO.ts","ts/instruments/Wave.ts","ts/instruments/Instrument.ts","ts/music.ts","ts/main.ts"],"names":[],"mappings":";AA+BA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA/BA,IAAM,EAAU,KAAA,IAAA,IAAO,IAejB,EAAgB,SAAC,EAAa,GAC9B,GAAA,EAAO,EAAG,OAAO,EACjB,GAAA,EAAO,EAAM,OAAO,KAAM,OAAO,EAAM,OAAO,OAAS,EAAO,EAAM,OAAO,MAC3E,GAAA,EAAO,EAAM,OAAO,KAAO,EAAM,MAAM,KAAM,CACzC,IAAA,EAAK,EAAO,EAAM,OAAO,KAAQ,EAAM,MAAM,KAC5C,OAAA,EAAM,OAAO,OAAS,EAAI,GAAK,EAAM,MAAM,MAAQ,EAExD,GAAA,EAAO,EAAM,OAAO,KAAO,EAAM,MAAM,KAAO,EAAM,QAAQ,KAAM,CAC9D,EAAK,EAAO,EAAM,OAAO,KAAO,EAAM,MAAM,KAAQ,EAAM,QAAQ,KACjE,OAAA,EAAM,MAAM,OAAS,EAAI,GAAK,EAAM,QAAQ,MAAQ,EAEtD,OAAA,GAKT,EAAA,WAAA,SAAA,IACE,KAAA,KAAa,CACX,OAAQ,CAAE,KAAM,IAAM,MAAO,GAC7B,MAAO,CAAE,KAAM,IAAM,MAAO,IAC5B,QAAS,CAAE,KAAM,IAAM,MAAO,IAyDlC,OAtDE,EAAA,UAAA,SAAA,SAAS,EAAgB,GAClB,KAAA,KAAK,GAAQ,GAGpB,EAAA,UAAA,YAAA,SAAY,EAAoB,EAAiB,GAC3C,OAAA,EAAO,KAAK,KAAK,QAAQ,MAE3B,EAAO,wBACL,KAAK,KAAK,MAAM,OAAS,EAAO,KAAK,KAAK,QAAQ,MAClD,QAEF,EAAO,wBAAwB,EAAG,EAAU,KAG9C,EAAO,wBAAwB,EAAG,GAC9B,EAAO,KAAK,KAAK,QAAQ,KAAO,KAAK,KAAK,OAAO,MAEnD,EAAO,wBACL,EAAc,KAAK,KAAM,EAAO,KAAK,KAAK,QAAQ,MAClD,EAAU,EAAO,KAAK,KAAK,QAAQ,MAErC,EAAO,eACL,KAAK,KAAK,QAAQ,MAClB,EAAU,EAAO,KAAK,KAAK,QAAQ,KAAO,QAE5C,EAAO,wBAAwB,EAAG,EAAU,KAI9C,EAAO,wBAAwB,KAAK,KAAK,OAAO,MAAO,EAAU,KAAK,KAAK,OAAO,MAE9E,EAAO,KAAK,KAAK,QAAQ,KAAO,KAAK,KAAK,OAAO,KAAO,KAAK,KAAK,MAAM,OAE1E,EAAO,wBACL,EAAc,KAAK,KAAM,EAAO,KAAK,KAAK,QAAQ,MAClD,EAAU,EAAO,KAAK,KAAK,QAAQ,MAErC,EAAO,eACL,KAAK,KAAK,QAAQ,MAClB,EAAU,EAAO,KAAK,KAAK,QAAQ,KAAO,GAE5C,EAAO,wBAAwB,EAAG,EAAU,IAG9C,EAAO,wBACL,KAAK,KAAK,MAAM,MAChB,EAAU,KAAK,KAAK,OAAO,KAAO,KAAK,KAAK,MAAM,MAEpD,EAAO,wBACL,KAAK,KAAK,MAAM,MAChB,EAAU,EAAO,KAAK,KAAK,QAAQ,WAErC,EAAO,wBAAwB,EAAG,EAAU,MAEhD,EA7DA,GAAA,QAAA,QAAA;;AC9Ba,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IADb,QAAA,WAAA,EACa,QAAA,MAAQ,SAAC,EAAe,GAAgB,OAAA,MAAM,KACzD,CAAE,OAAS,EAAM,EAAQ,GACzB,SAAC,EAAG,GAAM,OAAA,EAAI;;ACHhB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,WAWE,SAAA,EAAY,GAVZ,KAAA,UAAoB,EAEpB,KAAA,MAAgB,EAST,KAAA,QAAU,EACV,KAAA,WAAa,KAAK,QAAQ,mBAC1B,KAAA,WAAW,KAAO,OAClB,KAAA,KAAO,KAAK,QAAQ,aACpB,KAAA,WAAW,QAAQ,KAAK,MACxB,KAAA,WAAW,MAAM,GAa1B,OAVE,EAAA,UAAA,YAAA,SAAY,GACL,KAAA,UAAY,EACZ,KAAA,WAAW,UAAU,MAAQ,KAAK,WAGzC,EAAA,UAAA,iBAAA,SAAiB,GACV,KAAA,WAAW,UAAU,MAAQ,KAAK,UAClC,KAAA,KAAK,KAAK,MAAQ,KAAK,MACvB,KAAA,KAAK,QAAQ,IAEtB,EA9BA,GAAA,QAAA,QAAA;;ACWA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAXa,QAAA,SAAW,CACtB,MAAO,CAAC,EAAG,KAAO,KAAO,KAAO,KAAO,KAAO,EAAG,MACjD,QAAS,CACP,EAAG,EAAG,KAAO,IAAO,KAAO,IAAO,KAAO,KAAO,KAAO,KACvD,KAAO,EAAO,KAAO,IAAO,KAAO,KAAO,KAAO,IAAO,MAE1D,QAAS,CACP,EAAG,IAAM,IAAM,IAAM,IAAM,KAI/B,IAAA,EAAA,WASE,SAAA,EAAY,GACL,KAAA,QAAU,EACV,KAAA,UAAY,IAAI,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAc5D,OAVE,EAAA,UAAA,aAAA,SAAa,GACN,KAAA,KAAO,IAAI,aAAa,GACxB,KAAA,UAAY,IAAI,aAAa,EAAI,IAAI,WAAM,OAAA,KAC3C,KAAA,UAAY,KAAK,QAAQ,mBAAmB,KAAK,KAAM,KAAK,YAInE,EAAA,UAAA,QAAA,SAAQ,GACN,EAAW,gBAAgB,KAAK,YAEpC,EAzBA,GAAA,QAAA,QAAA;;ACaA,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAxBA,IAAA,EAAA,QAAA,YAEA,EAAA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,WAEM,EAAQ,KAAA,IAAA,EAAM,EAAI,IAClB,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC5B,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAG5B,EAAiB,SAAC,GAChB,IAAA,EAAQ,EAAA,OAAO,GAAI,IAAI,IAAI,SAAC,GAAQ,OAAA,EAAQ,KAAA,IAAA,EAAS,KACpD,OAAA,SAAC,GACA,IAAA,EAAM,KAAK,MAAM,EAAO,GACxB,EACA,EAAO,GAAM,GACR,EAAM,EAAa,EAAN,EAAU,IAAa,GAAN,EAEhC,EAAO,EAAa,EAAN,GAAiB,GAAN,EAE3B,OAAA,EAAM,EAAQ,MAIzB,EAAA,WAiBE,SAAA,EAAY,EAAe,GAV3B,KAAA,SAAmB,OAQZ,KAAA,OAAiB,GAGjB,KAAA,MAAQ,EAAe,GACvB,KAAA,QAAU,IAAI,aACd,KAAA,IAAM,EAqDf,OAlDE,EAAA,UAAA,UAAA,WAES,OADF,KAAA,IAAM,IAAI,EAAA,QAAI,KAAK,SACjB,KAAK,KAGd,EAAA,UAAA,WAAA,WAES,OADF,KAAA,KAAO,IAAI,EAAA,QAAK,KAAK,SACnB,KAAK,MAGd,EAAA,UAAA,KAAA,SAAK,EAAe,GAApB,IAAA,EAAA,KACM,GAAA,GAAS,GAAK,GAAS,GAClB,OAAA,IAAI,QAAQ,SAAC,GAClB,WAAW,WACT,KACE,IAAQ,EAAK,IAAO,KAGtB,IAAA,EAAa,KAAK,QAAQ,mBAE5B,KAAK,KAAM,KAAK,KAAK,QAAQ,GAC5B,EAAW,KAAO,KAAK,SAE5B,EAAW,UAAU,MAAQ,KAAK,MAAM,GACpC,KAAK,KAAK,KAAK,IAAI,iBAAiB,EAAW,WAE7C,IAAA,EAAO,KAAK,QAAQ,aACtB,KAAK,aACF,KAAA,aAAa,YAChB,EAAK,KACL,KAAK,QAAQ,YACZ,IAAQ,KAAK,IAAO,GAElB,EAAK,KAAK,MAAQ,EAEnB,IAAA,EAAa,KAAK,QAAQ,aAQzB,OAPP,EAAW,KAAK,MAAQ,KAAK,OAE7B,EAAW,QAAQ,GACnB,EAAK,QAAQ,GACb,EAAW,QAAQ,KAAK,QAAQ,aAEhC,EAAW,MAAM,GACV,IAAI,QAAQ,SAAC,GAClB,WAAW,WACT,EAAW,KAAK,GAChB,KACE,IAAQ,EAAK,IAAO,MAG9B,EAzEA,GAAA,QAAA,QAAA;;ACnBa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,WAAA,EAJA,QAAA,MAAQ,CACnB,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,KAAM,KAAM,KAAM,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,KAAM,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,MAAO,IAAK,GAAI,GAAI,IAAK,KAAM,KAAM,IAAK,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,KAAM,KAAM,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,KAAM,KAAM,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,MAAO,IAAK,GAAI,GAAI,IAAK,KAAM,KAAM,KAG9lB,QAAA,OAAS,CACppB,aAAA,IAAA,EAAA,MAAA,KAAA,kBAAA,OAAA,OAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,GAAA,OAAA,eAAA,EAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,OAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,KAAA,qBAAA,OAAA,OAAA,SAAA,EAAA,GAAA,OAAA,eAAA,EAAA,UAAA,CAAA,YAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,EAAA,QAAA,IAAA,EAAA,MAAA,KAAA,cAAA,SAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,YAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA/BA,IAAA,EAAA,EAAA,QAAA,2BACA,EAAA,EAAA,QAAA,6BACA,EAAA,EAAA,QAAA,YACA,EAAA,QAAA,sBAEM,EAAW,IAAI,EAAA,QACrB,EAAS,SAAS,SAAU,CAAE,KAAM,GAAK,MAAO,IAChD,EAAS,SAAS,QAAS,CAAE,KAAM,GAAK,MAAO,IAC/C,EAAS,SAAS,UAAW,CAAE,KAAM,EAAG,MAAO,IAE/C,IAAM,EAAO,IAAI,EAAA,QAAW,QAAS,KACrC,EAAK,aAAe,EAEpB,IAAM,EAAM,EAAK,YACjB,EAAI,MAAQ,GAEZ,IAAM,EAAO,EAAK,aAClB,EAAK,aAAa,EAAA,SAAa,SAE/B,SAAS,eAAe,UAAU,iBAAiB,QAAS,WAEtD,IAAA,EAAQ,IAAI,QAAQ,SAAC,GACvB,WAAW,WAAM,OAAA,QAEnB,EAAU,MAAM,IAAI,SAAC,EAAG,GACtB,EAAQ,EAAM,KAAK,WAEV,OADP,EAAK,SAAW,OACT,EAAK,KAAK,EAAU,MAAM,GAAS,EAAG,EAAU,OAAO,UAIpE,SAAS,eAAe,YAAY,iBAAiB,YAAa,SAAC,GAEjE,EAAI,YAA6B,GAAjB,EAAE,OAAO","file":"main.e6501afb.js","sourceRoot":"../public","sourcesContent":["const EPSILON = 10 ** -10;\n\n// Envelopeの点\nexport interface EnvelopePoint {\n  time: number // 継続時間\n  value: number // 値\n}\n\ntype ADSR = {\n  attack: EnvelopePoint,\n  decay: EnvelopePoint,\n  release: EnvelopePoint,\n}\n\n// ADRの順に並べたときにtimeの時の値\nconst sequenceValue = (model: ADSR, time: number) => {\n  if (time < 0) return 0;\n  if (time < model.attack.time) return model.attack.value * (time / model.attack.time);\n  if (time < model.attack.time + model.decay.time) {\n    const a = (time - model.attack.time) - model.decay.time;\n    return model.attack.value * (1 - a) + model.decay.value * a;\n  }\n  if (time < model.attack.time + model.decay.time + model.release.time) {\n    const a = (time - model.attack.time - model.decay.time) - model.release.time;\n    return model.decay.value * (1 - a) + model.release.value * a;\n  }\n  return 0;\n};\n\ntype ADSRType = 'attack' | 'decay' | 'sustain' | 'release';\n\nexport default class Envelope {\n  ADSR: ADSR = {\n    attack: { time: 0.02, value: 1 },\n    decay: { time: 0.02, value: 0.6 },\n    release: { time: 0.02, value: 0 },\n  };\n\n  setPoint(type: ADSRType, point: EnvelopePoint): void {\n    this.ADSR[type] = point;\n  }\n\n  setEnvelope(params: AudioParam, current: number, time: number): void {\n    if (time < this.ADSR.release.time) {\n      // 全部リリース\n      params.linearRampToValueAtTime(\n        this.ADSR.decay.value * (time / this.ADSR.release.time),\n        current,\n      );\n      params.linearRampToValueAtTime(0, current + time);\n      return;\n    }\n    params.linearRampToValueAtTime(0, current);\n    if (time - this.ADSR.release.time < this.ADSR.attack.time) {\n      // アタック途中でリリース\n      params.linearRampToValueAtTime(\n        sequenceValue(this.ADSR, time - this.ADSR.release.time),\n        current + time - this.ADSR.release.time,\n      );\n      params.setValueAtTime(\n        this.ADSR.release.value,\n        current + time - this.ADSR.release.time + EPSILON,\n      );\n      params.linearRampToValueAtTime(0, current + time);\n      return;\n    }\n\n    params.linearRampToValueAtTime(this.ADSR.attack.value, current + this.ADSR.attack.time);\n\n    if (time - this.ADSR.release.time < this.ADSR.attack.time + this.ADSR.decay.time) {\n      // ディケイ途中でリリース\n      params.linearRampToValueAtTime(\n        sequenceValue(this.ADSR, time - this.ADSR.release.time),\n        current + time - this.ADSR.release.time,\n      );\n      params.setValueAtTime(\n        this.ADSR.release.value,\n        current + time - this.ADSR.release.time + EPSILON,\n      );\n      params.linearRampToValueAtTime(0, current + time);\n    }\n\n    params.linearRampToValueAtTime(\n      this.ADSR.decay.value,\n      current + this.ADSR.attack.time + this.ADSR.decay.time,\n    );\n    params.linearRampToValueAtTime(\n      this.ADSR.decay.value,\n      current + time - this.ADSR.release.time,\n    );\n    params.linearRampToValueAtTime(0, current + time);\n  }\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport const range = (start: number, end: number) => Array.from(\n  { length: (end - start + 1) },\n  (v, k) => k + start,\n);\n","export default class LFO {\n  frequency: number = 2;\n\n  depth: number = 5;\n\n  context: AudioContext;\n\n  oscillator: OscillatorNode;\n\n  gain: GainNode;\n\n  constructor(context: AudioContext) {\n    this.context = context;\n    this.oscillator = this.context.createOscillator();\n    this.oscillator.type = 'sine';\n    this.gain = this.context.createGain();\n    this.oscillator.connect(this.gain);\n    this.oscillator.start(0);\n  }\n\n  setFreqency(freq: number) {\n    this.frequency = freq;\n    this.oscillator.frequency.value = this.frequency;\n  }\n\n  connectFrequency(oscillatorFreq: AudioParam) {\n    this.oscillator.frequency.value = this.frequency;\n    this.gain.gain.value = this.depth;\n    this.gain.connect(oscillatorFreq);\n  }\n}","export const Template = {\n  PIANO: [0, 0.631, 0.167, 0.104, 0.026, 0.036, 0, 0.035],\n  TIMPANI: [\n    0, 0, 0.012, 0.190, 0.014, 0.260, 0.108, 0.089, 0.062, 0.016,\n    0.026, 0.000, 0.022, 0.010, 0.046, 0.052, 0.051, 0.020, 0.021,\n  ],\n  TRUMPET: [\n    0, 0.18, 0.31, 0.35, 0.06, 0.1,\n  ],\n};\n\nexport default class Wave {\n  context: AudioContext;\n\n  real: Float32Array;\n\n  imaginary: Float32Array;\n\n  waveTable: PeriodicWave;\n\n  constructor(context: AudioContext) {\n    this.context = context;\n    this.imaginary = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0]);\n  }\n\n  // 倍音指定(imaginaryはとりあえず0)\n  setHarmonics(lis: number[]) {\n    this.real = new Float32Array(lis);\n    this.imaginary = new Float32Array(lis.map(() => 0));\n    this.waveTable = this.context.createPeriodicWave(this.real, this.imaginary);\n  }\n\n  // オシレーターに波形をセット\n  setWave(oscillator: OscillatorNode) {\n    oscillator.setPeriodicWave(this.waveTable);\n  }\n}\n","import { range } from '../utils';\nimport Envelope from './Envelope';\nimport LFO from './LFO';\nimport Wave from './Wave';\n\nconst pow12 = 2 ** (1 / 12);\nconst doremi = [0, 2, 4, 5, 7, 9, 11];\nconst sharp = [1, 3, 4, 6, 8, 10, 11];\n\n// 音階を-12から36までの48段階分生成\nconst notesGenerator = (_base: number) => {\n  const notes = range(-12, 36).map((num) => _base * pow12 ** num);\n  return (note) => {\n    const oct = Math.floor(note / 7);\n    const index = (() => {\n      if (note % 1 === 0.5) {\n        return sharp[note - oct * 7 - 0.5] + oct * 12;\n      }\n      return doremi[note - oct * 7] + oct * 12;\n    })();\n    return notes[index + 12];\n  };\n};\n\nexport default class Instrument {\n  notes: Function;\n\n  context: AudioContext;\n\n  bpm: number;\n\n  waveType: string = 'sine';\n\n  gainEnvelope?: Envelope;\n\n  lfo: LFO;\n\n  wave: Wave;\n\n  public volume: number = 0.2;\n\n  constructor(_base: number, bpm: number) {\n    this.notes = notesGenerator(_base);\n    this.context = new AudioContext();\n    this.bpm = bpm;\n  }\n\n  createLFO() {\n    this.lfo = new LFO(this.context);\n    return this.lfo;\n  }\n\n  createWave() {\n    this.wave = new Wave(this.context);\n    return this.wave;\n  }\n\n  play(index: number, length: number): Promise<void> {\n    if (index < -7 || index >= 21) {\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve();\n        }, (60000 / this.bpm) * length);\n      });\n    }\n    const oscillator = this.context.createOscillator();\n\n    if (this.wave) this.wave.setWave(oscillator);\n    else oscillator.type = this.waveType;\n\n    oscillator.frequency.value = this.notes(index);\n    if (this.lfo) this.lfo.connectFrequency(oscillator.frequency);\n\n    const gain = this.context.createGain();\n    if (this.gainEnvelope) {\n      this.gainEnvelope.setEnvelope(\n        gain.gain,\n        this.context.currentTime,\n        (60000 / this.bpm) * length,\n      );\n    } else gain.gain.value = 1;\n\n    const masterGain = this.context.createGain();\n    masterGain.gain.value = this.volume;\n\n    oscillator.connect(gain);\n    gain.connect(masterGain);\n    masterGain.connect(this.context.destination);\n\n    oscillator.start(0);\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        oscillator.stop(0);\n        resolve();\n      }, (60000 / this.bpm) * length);\n    });\n  }\n}\n","/* eslint-disable max-len */\nexport const notes = [\n  7, 10, 12, 11, 10, -100, 10, 11, 10, 10, 10, 8, 7, -100, 7, 7, 10, 10, 10, 12, 14, 12, 11, -100, 12, 10, 11, -100, 7, 10, 12, 12, 12, 11, 10, -100, 10, 10, 12.5, 12.5, 12.5, 14, 15, -100, 15, 15, 14, 14, 12, 14, 12.5, 12.5, 12, 11, 10, -100, 15, 15, 14, -100, 12, 14, 12.5, -100, 12, 11, 10, -100, -100, -100, 7, 10, 12, 11, 10, -100, 10, 11, 10, 10, 10, 8, 7, -100, 7, 7, 10, 10, 10, 12, 14, 12, 11, -100, 12, 10, 11, -100, 7, 10, 12, 12, 12, 11, 10, -100, 10, 10, 12.5, 12.5, 12.5, 14, 15, -100, 15, -100, 14, 14, 12, 14, 12.5, 12.5, 12, 11, 10, -100, 15, 15, 14, -100, 12, 14, 12.5, -100, 12, 11, 10, -100, -100, -100,\n];\n\nexport const length = [\n  0.5, 0.5, 1, 1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1, 1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 2, 1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1, 1, 0.5, 0.5, 1, 1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1, 1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 2, 1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 1, 2,\n];\n","/* eslint-disable array-callback-return */\nimport Envelope from './instruments/Envelope';\nimport Instrument from './instruments/Instrument';\nimport * as musicData from './music';\nimport { Template as WaveTemplate } from './instruments/Wave';\n\nconst envelope = new Envelope();\nenvelope.setPoint('attack', { time: 0.1, value: 1 });\nenvelope.setPoint('decay', { time: 0.6, value: 0 });\nenvelope.setPoint('release', { time: 1, value: 0 });\n\nconst inst = new Instrument(261.626, 120);\ninst.gainEnvelope = envelope;\n\nconst lfo = inst.createLFO();\nlfo.depth = 20;\n\nconst wave = inst.createWave();\nwave.setHarmonics(WaveTemplate.TRUMPET);\n\ndocument.getElementById('button').addEventListener('click', () => {\n  // oscillator.start(0);\n  let chain = new Promise((resolve) => {\n    setTimeout(() => resolve());\n  });\n  musicData.notes.map((_, index) => {\n    chain = chain.then(() => {\n      inst.waveType = 'sine'; // ['sine', 'square', 'sawtooth', 'triangle'][Math.floor(Math.random() * 4)];\n      return inst.play(musicData.notes[index] - 7, musicData.length[index]);\n    });\n  });\n});\ndocument.getElementById('playback').addEventListener('mousemove', (e) => {\n  // oscillator.start(0);\n  lfo.setFreqency(e.target.value * 20);\n});\n"]}